#!/usr/bin/php5
<?php
/**
 * Prototype to dump a database in XML format according to the schema
 *
 * @copyright (C) 2002-2007 The Digital Development Foundation
 * @license GPL {@link http://www.gnu.org/licenses/gpl.html}
 * @link http://www.xaraya.com
 * @subpackage cli
 * @author Marcel van der Boom
 */



/**
 * Set configuration options if necessary
 *
 * Defaults to using the db connection in the application
 * and not logged in as a specific user
 *
 * @todo expose on the cmdline
 * @todo add option to set the schema name
 * @todo add option to specify a list of tables to get
 * @todo move most of this into xaraya proper and make it runnable via cli interface (currently html/ls.php)
 */
$xaruser = '';
$xarpass = '';
$dbtype = 'sqlite';
//$dbhost = '../tests/xml/schemas/ddl';
$dbname= 'ddltest';
$dbuser = '';
$dbpass = '';
/* We need a (fake) ip address to run xar */
putenv("REMOTE_ADDR=127.0.0.1");
/* End configurable stuff */

/* Make sure we're in the docroot */
chdir("../html");
include '../lib/bootstrap.php';
sys::import('xaraya.core');
xarCoreInit(XARCORE_SYSTEM_ALL);

/* Make sure we handle boney instead of fancy */
set_exception_handler(array('ExceptionHandlers','bone'));

if (!empty($xaruser)) {
    /* Authenticate */
    if (!xarUserLogin($xaruser,$xarpass)) {
        fwrite(STDERR,"Authentication failed\n");
        return 1;
    }
    fwrite(STDERR,"Authenticated\n");
}

if (!empty($dbhost)) {
    $dsnArgs = array(
        'databaseType'  =>  $dbtype,
        'databaseHost'  =>  $dbhost,
        'databaseName'  =>  $dbname,
        'userName'      =>  $dbuser,
        'password'      =>  $dbpass
    );
    $dbconn = xarDBNewConn($dsnArgs);
} else {
    $dbconn = xarDB::getConn();
}
$dbInfo = $dbconn->getDatabaseInfo();   // DatabaseInfo object
sys::import('creole.CreoleTypes');
$typeMap = array(
    CreoleTypes::getCreoleCode('BOOLEAN')       => 'boolean',
    CreoleTypes::getCreoleCode('VARCHAR')       => 'text',
    CreoleTypes::getCreoleCode('LONGVARCHAR')   => 'text',
    CreoleTypes::getCreoleCode('CHAR')          => 'text',
    CreoleTypes::getCreoleCode('VARCHAR')       => 'text',
    CreoleTypes::getCreoleCode('TEXT')          => 'text',
    CreoleTypes::getCreoleCode('CLOB')          => 'text',
    CreoleTypes::getCreoleCode('LONGVARCHAR')   => 'text',
    CreoleTypes::getCreoleCode('INTEGER')       => 'number',
    CreoleTypes::getCreoleCode('TINYINT')       => 'number',
    CreoleTypes::getCreoleCode('BIGINT')        => 'number',
    CreoleTypes::getCreoleCode('SMALLINT')      => 'number',
    CreoleTypes::getCreoleCode('TINYINT')       => 'number',
    CreoleTypes::getCreoleCode('INTEGER')       => 'number',
    CreoleTypes::getCreoleCode('FLOAT')         => 'number',
    CreoleTypes::getCreoleCode('NUMERIC')       => 'number',
    CreoleTypes::getCreoleCode('DECIMAL')       => 'number',
    CreoleTypes::getCreoleCode('YEAR')          => 'number',
    CreoleTypes::getCreoleCode('REAL')          => 'number',
    CreoleTypes::getCreoleCode('DOUBLE')        => 'number',
    CreoleTypes::getCreoleCode('DATE')          => 'time',
    CreoleTypes::getCreoleCode('TIME')          => 'time',
    CreoleTypes::getCreoleCode('TIMESTAMP')     => 'time',
    CreoleTypes::getCreoleCode('VARBINARY')     => 'binary',
    CreoleTypes::getCreoleCode('VARBINARY')     => 'binary',
    CreoleTypes::getCreoleCode('BLOB')          => 'binary',
    CreoleTypes::getCreoleCode('BINARY')        => 'binary',
    CreoleTypes::getCreoleCode('LONGVARBINARY') => 'binary'
);
$tplData = array(
    'dbname' => $dbInfo->getName(),     // string
    'tables' => $dbInfo->getTables(),   // array of TableInfo objects
    'types'  => $typeMap
    );


// Produce the xml
$out = xarTplFile('../tests/xml/schemas/ddl/db2xml.xd',$tplData);
echo $out;
?>